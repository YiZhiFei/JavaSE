package com.njxxyizhifei.javase.day11.test001;

/**
 * 1.关于java语言当中的多态语法机制：
 *      1.Animal、Cat、Bird三个类之间的关系：
 *         Cat继承Animal
 *         Bird继承Animal
 *         Cat和Bird之间没有任何继承关系
 *         
 * 2.面向对象三大特征：封装、继承、多态
 * 
 * 3.关于多态中涉及的几个概念：
 *     * 向上转型（upcasting）
 *        子类型 --> 父类型
 *        又被称为： 自动类型转换。
 *    
 *     * 向下转型（downcasting）
 *        父类型 --> 子类型
 *        又被称为：强制类型转换。【需要加强制类型转换符】
 *        
 *     * 需要记忆：无论是向上转型还是向下转型，两种类型之间必须要有继承关系。
 *              没有继承关系，编译无法通过。
 */
public class Test {

	public static void main(String[] args) {
		
	
	//以前编写的程序
	Animal a1 = new Animal();
	a1.move();
	
	Cat c1 = new Cat();
	c1.move();
	
	Bird b1 = new Bird();
	b1.move();

	//使用多态语法机制
	/**
	 * 1.Animal和Cat之间存在继承关系，Animal是父类，Cat是子类
	 * 
	 * 2.Cat is a Animal
	 * 
	 * 3.new Cat()创建的对象的类型是Cat,a2这个引用的数据类型是Animal,可见它们进行了类型转换
	 * 子类型转成父类型，所以称为向上转型/upcasting,或称为自动类型转换
	 * 
	 * 4.Java中允许这种语法：父类型引用指向子类型对象。
	 */
	
	Animal a2 = new Cat();
	
	a2.move();
	//不能写catchMouse，因为编译器只认Animal
	}
}


















